STEP("input", "Download file dati meteo") {
	VAR weatherLoadConfigurations = Weather_Load_Config.ID;
	VAR updateLoader = weatherLoadConfigurations[0];
    
    COMBOBOX([
		"id":"updateLoaderIdCb",
		"key" : "Configurazione caricamento",
		"variable" : "updateLoader",
		"primitiveType" : "STRING", 
		"values" : weatherLoadConfigurations,
		"manualInput" : FALSE,
        "labelStyleClass" : "defaultLabelStyle"
	]);
    
    VAR start = DATESUM(TODAY(), -7, "DAILY");
    TEXTBOX([
        "primitiveType" : "DATE",
        "variable" : "start",
        "key" : "Data inizio",
        "required" : TRUE,
        "labelStyleClass" : "defaultLabelStyle",
        "id" : "startDate",
        "textboxStyleClass" : "dates"
    ]);

    VAR end = TODAY();
    TEXTBOX([
        "primitiveType" : "DATE",
        "variable" : "end",
        "key" : "Data fine",
        "required" : TRUE,
        "labelStyleClass" : "defaultLabelStyle",
        "id" : "endDate",
        "textboxStyleClass" : "dates"
    ]);

    VALIDATION : {
        IF(DATEDIFF(start, end, "DAILY") > 366) THEN {
            RETURN "Selezionare un periodo uguale o inferiore a 366 giorni";
        }
        RETURN NULL;
    }


    STYLE : {
        CoreLibrary.getDefaultCss()
        + CoreLibrary.getTextboxDefaultStyleClass("number",50)
        + CoreLibrary.getTextboxDefaultStyleClass("dates",80)
        + "";
    }
}
STEP("input", "Download file dati meteo") {


    VAR meteoInstance;
    meteoInstance = Weather_Load_Config[ID=$updateLoader];
    
    VAR path;
    path = meteoInstance.LocalPath;
    
    VAR meteoCsv;
    meteoCsv = meteoInstance.Weather_Load_Action.WthLoadAction_WthTemplateCsv.Weather_Template_Csv;
    meteoCsv = meteoCsv[0];
    VAR prefix;
    prefix = meteoCsv.FilenamePrefix;
    VAR suffix;
    suffix = meteoCsv.FilenameSuffix;
    VAR datePattern;
    datePattern = meteoCsv.FilenameDatePattern;
    
   

    VAR datesTs;
    datesTs = ONES(start, end, "DAILY", "");
    VAR filename;
    VAR file;

    VAR filesArray;
    filesArray = {};
    FOREACHDATE(datesTs AS currentDay) {
        filename = prefix + PARSESTRING(currentDay, datePattern) + suffix;
        file = GETFILEFROMFOLDER(path + "/" + filename);
        IF(file <> NULL) THEN {
            ADDELEMENT(filesArray, file);
        }   
    }
    VAR result;
    IF(SIZE(filesArray) > 0) THEN {
        result = ZIP("dati_meteo.zip", filesArray);
    } ELSE {
        result = "Nessun file presente per il periodo specificato";
    }

    SHOWMESSAGE([
        "key" : "File : ",
        "variable" : result,
        "id" : "file"
    ]);

    STYLE : {
        CoreLibrary.getDefaultCss()
        + CoreLibrary.getTextboxDefaultStyleClass("number",50)
        + CoreLibrary.getTextboxDefaultStyleClass("dates",80)
        + "";
    }
}