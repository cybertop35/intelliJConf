# 
STEP("input", "${stepTitle}"){
	
	# DEBUGMESSAGE("Run ScheduleUpdateWeatherData.we ", "${stepTitle}");

	# VAR NOMINA ="Nomina";
	# VAR RINOMINA ="Rinomina";
	
	VAR weatherLoadConfigurations = SORT(Weather_Load_Config.ID, 'ASC');
	VAR updateLoader = weatherLoadConfigurations[0];
	
	VAR usrTaskExecutionDescr = NULL;
	SHOWMESSAGE([
		"id":"updateLoaderIdSm",
		"key":"${updateLoader}" + ": "
	]);
	COMBOBOX([
		"id":"updateLoaderIdCb",
		"key" : "",
		"variable" : "updateLoader",
		"primitiveType" : "STRING", 
		"values" : weatherLoadConfigurations,
		"manualInput" : FALSE
	]);
	
	VAR updateType;
	SHOWMESSAGE([
		"id":"updateTypeIdSm",
		"key":"${updateType}" + ": "
	]);
	COMBOBOX([

		"id":"updateTypeIdCb",
		"key" : "",
		"variable" : "updateType",
		"primitiveType" : "STRING", 
		"values" : { "${singleDate}", "${rolling}", "${range}" },
		"manualInput" : FALSE

	]);
	
	SHOWMESSAGE([
		"id":"usrTaskDescriptionIdSm",
		"key":"${updateDescription}" + ": "
	]);
	TEXTBOX([ 
		"id":"usrTaskDescriptionIdTb",
		"primitiveType" : "STRING", 
		"variable": "usrTaskExecutionDescr", 
		"key" : "", 
		"required" : FALSE,
		"textboxStyleClass":"width400"
	]);

	STYLE : {
		CoreLibrary.getDefaultCss() 
		 + CoreLibrary.getTextboxDefaultStyleClass("shortTextboxClass",45)
		 + CoreLibrary.getTextboxDefaultStyleClass("dateTextboxClass",70)
		 + CoreLibrary.getTextboxDefaultStyleClass("longTextboxClass",350)
		 + ".general {overflow:auto;}
		 .clear{clear:both;}
		 .marginBottom15 {margin-bottom:15px;}
		 .marginTop5 {margin-top:5px;}
		 .headerFontSize {font-size:16px;}
		 .left{float:left;padding-left:10px;padding-right:10px;padding-top:5px;}
		 .leftmargintop{float:left;padding-top:5px;margin-top:5px}
		 .containerRow {overflow:auto;clear:both;}
		 .borderBottom {width:30%; border-bottom: 3px ridge red;}
		 .paddingTop15 {padding-top:15px;}
		 .paddingTop10 {padding-top:10px;}
		 .paddingTop5 {padding-top:5px;}
		 .paddingLeft15{padding-left:15px;}
		 .paddingLeft10{padding-left:10px;}
		 .width80{width:80px;}
		 .width78{width:78px;}
		 .width400{width:400px;}
		";
	}
	
	LAYOUT:{
		DIV("general"){
			DIV("clear paddingTop5"){
				DIV("left width80"){"updateLoaderIdSm";}
				DIV("left"){"updateLoaderIdCb";}
			}
			
			DIV("clear paddingTop5"){
				DIV("left width80"){"updateTypeIdSm";}
				DIV("left"){"updateTypeIdCb";}
			}
			
			DIV("clear paddingTop15 left"){"usrTaskDescriptionIdSm";}
			DIV("clear paddingTop5 left"){"usrTaskDescriptionIdTb";}
		}
	}
}

STEP("input", "${stepTitle}"){
	VAR taskName;
	VAR taskExecutionName = "${taskExecName}" + PARSESTRING(NOW(), "dd-MM-yyyy HH:mm") + " - [Update Type: " + updateType +"]";
	VAR taskExecutionDescr = taskExecutionName;
	
	VAR op1;
	VAR theUser = USER();	
	VAR taskParams;
	VAR start = TODAY();
	VAR end = TODAY();
	VAR shiftStart;
	VAR shiftEnd;

    taskName = "[Core] ExecuteWorkflowOverrideParameters";
    var workflowName;
	IF(updateType == "${singleDate}") THEN {
		workflowName = "[EnergyItaly] UpdateWeatherDataRange";
		TEXTBOX([ "primitiveType" : "DATE", "variable": "start", "key" : "${singleDateTextbox}" + ": ", "required" : TRUE, "labelStyleClass" : "defaultLabelStyle" ]);
	} ELSE IF(updateType == "${rolling}") THEN {
		workflowName = "[EnergyItaly] UpdateWeatherDataRolling";
		shiftStart = 0;
		shiftEnd = 0;
		TEXTBOX([ "primitiveType" : "INTEGER", "variable": "shiftStart", "key" : "${shiftStart}" + ": ", "required" : TRUE, "labelStyleClass" : "defaultLabelStyle" ]);
		TEXTBOX([ "primitiveType" : "INTEGER", "variable": "shiftEnd", "key" : "${shiftEnd}" + ": ", "required" : TRUE, "labelStyleClass" : "defaultLabelStyle" ]);
	} ELSE IF(updateType == "${range}") THEN {
		workflowName = "[EnergyItaly] UpdateWeatherDataRange";
		TEXTBOX([ "primitiveType" : "DATE", "variable": "start", "key" : "${rangeStart}" + ": ", "required" : TRUE, "labelStyleClass" : "defaultLabelStyle" ]);
		TEXTBOX([ "primitiveType" : "DATE", "variable": "end", "key" : "${rangeEnd}" + ": ", "required" : TRUE, "labelStyleClass" : "defaultLabelStyle" ]);
	}
	
	VAR updatePart2 = "Climatic_Zone.TempAvgTenYear;Climatic_Zone.TempMinTenYear;Climatic_Zone.TempMaxTenYear";
	VAR updatePart3 = "Climatic_Zone.TempAvgAsIs;Climatic_Zone.TempMinAsIs;Climatic_Zone.TempMaxAsIs";

    VAR updateString = updatePart2 + "|" + updatePart3;
	VAR op2 = ["Context entity type name"     : "", 
               "Context entity character ID"  : "",
               "Formula fields to be updated" : updateString
              ];
	
	VAR weatherLoader = updateLoader;
	
	# IF(updateLoader == NOMINA) THEN {
	# 	weatherLoader = "MeteoGDFNomina";
	# } ELSE IF(updateLoader == RINOMINA) THEN {
	# 	weatherLoader = "MeteoGDFRinomina";
	# }
	
    var parametersOverride;
    
	ON_NEXT : {
		IF(updateType == "${singleDate}") THEN {
			end = start;			
            op1 =["configName" : weatherLoader,
                  "startDate"  : start,
                  "endDate"    : end
                 ];            
		} ELSE IF(updateType == "${rolling}") THEN {			
            op1 =["configName" : weatherLoader,
                  "startShift" : shiftStart,
                  "endShift"   : shiftEnd
                 ]; 
		} ELSE IF(updateType == "${range}") THEN {			
            op1 =["configName" : weatherLoader,
                  "startDate"  : start,
                  "endDate"    : end
                 ];
		}		
		
		IF(usrTaskExecutionDescr <> NULL) THEN {
			taskExecutionDescr = usrTaskExecutionDescr;
		}
		
		parametersOverride = [ "Step 1" : op1, "Step 2" : op2 ];
        
        taskParams = {workflowName, parametersOverride, theUser};
	}
	
	STYLE : {
		CoreLibrary.getDefaultCss();
	}

}
STEP("custom", "com.i4c.antares.wizardeditor.custom.ScheduleTaskStep", "selectScheduleType"){
}