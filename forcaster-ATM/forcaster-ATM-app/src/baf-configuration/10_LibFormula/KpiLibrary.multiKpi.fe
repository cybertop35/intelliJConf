# KpiLibrary.multiKpi(FETimeSeries actual, FETimeSeries forecast)
# Date le due serie in input restituisce una mappa di KPI:
# Return all KPIs:
# - [new KPIs calculated here] Mean;SD;SST;MSE;RMSE;UMSE;URMSE;MINPE;A_PBIAS;RSQUARE;NSE;IQR_A_APE;RSR;
# - [KPIs calculated by forecasterLib.multiKpi(actual, forecast)]
#	SSE;MAXPE;A-MPE;F-MPE;S-MPE;W-MPE;A-MAPE;F-MAPE;S-MAPE;A-WAPE;F-WAPE;S-WAPE;A-WMAPE;F-WMAPE;S-WMAPE;MAXERROR;ME;MAE;WMAE

# ------------------------------------------------------------------------------------------------------------------------------------
# Dati di test per NiSource:
# 
# VAR mktareas = Dp.[ID, DESCRIPTION];
# VAR mktarea = Dp[ID="33"];
# VAR inizio = '3/11/2015';
# VAR fine = '9/11/2015';
# VAR p1 = mktarea.AsIsDemand;
# VAR p2 = mktarea.AccentureForeAuto;
# VAR Param1 = mktarea.AsIsDemand{$inizio, $fine};
# VAR Param2 = mktarea.AccentureForeAuto{$inizio, $fine};
# VAR mappa = KpiLibrary.multiKpi(Param1, Param2);
# ------------------------------------------------------------------------------------------------------------------------------------

#	DEBUGMESSAGE("INIZIO actual: ", STARTDATE(Param1));
#	DEBUGMESSAGE("FINE actual: ", ENDDATE(Param1));
#	DEBUGMESSAGE("VALORI actual: ", VALUES(Param1));
#	
#	DEBUGMESSAGE("INIZIO forecast: ", STARTDATE(Param2));
#	DEBUGMESSAGE("FINE forecast: ", ENDDATE(Param2));
#	DEBUGMESSAGE("VALORI forecast: ", VALUES(Param2));

VAR actual = Param1;
VAR forecast = Param2;
VAR N = SIZE(actual);
VAR mappaKpis = [];

# ------------------------------------------------------------------------------------------------------------------------------------
# GESTIONE UdM: le tolgo e le forzo alla fine
# 
# VAR uom = "DTH";
# VAR uom2 = "DTH2";
VAR uomActual = GETUDM(actual);
VAR uomForecast = GETUDM(forecast);
actual = actual/1<$uomActual>;
forecast = forecast/1<$uomForecast>;

VAR uom = uomForecast;
VAR uom2 = uomForecast+"2";
IF (uom == NULL) {
	uom = uomActual;
	uom2 = uomActual+"2";
}
if (uom == null) { uom2 = null;}
# ------------------------------------------------------------------------------------------------------------------------------------


VAR media = AVG(actual);
VAR sst = SUMTS(POW_TS(actual-media,2), null, null);
VAR sd = SQRT(sst/(N-1));


VAR arrayKpis = forecasterLib.multiKpi(actual, forecast);
VAR sse = arrayKpis[0];


# VAR sse = SUMTS(POW_TS(actual-forecast,2), null, null);
VAR mse = sse/N;
VAR rmse = SQRT(mse);
VAR umse = N*mse/(N-1);
VAR urmse = SQRT(umse);
# VAR maxpe = MAX( VALUES( ABS(actual-forecast) / actual ) );
# VAR minpe = MIN( VALUES( ABS(actual-forecast) / actual ) );
VAR apbias = SUMTS(forecast-actual, null, null) / SUMTS(actual, null, null);
VAR rsquare = 1 - sse/sst;


VAR sourceCode = '
library(hydroGOF)

# pick the right frame
if (exists("hourlyFrame")) {
  tsFrame <- hourlyFrame       
} else if (exists("dailyFrame")){
  tsFrame <- dailyFrame  
} else {
  tsFrame <- monthlyFrame
}

# remove rows with hole
tsFrame <- tsFrame[!is.na(tsFrame$actual) & !is.na(tsFrame$forecast),]

actual   <- tsFrame$actual
forecast <- tsFrame$forecast
n <- length(actual)
w <- ifelse(forecast<actual, 0.3, 1)

# initialize result array
results <- c()

# ---

# MINPE
results <- append(results, min( abs(actual-forecast)/actual ) )

# NSE
# round(NSE(sim= ADF$Forecast, obs = ADF$Real),4)
results <- append(results, NSE(sim= forecast, obs= actual) )

# IQR-A-APE
# round(IQR(abs((A2DF$Real - A2DF$Forecast)/A2DF$Real), type = 7)*100, 2)
results <- append(results, IQR(abs((actual - forecast)/actual), type = 7)*100 )

# PBIAS is also the PERCENT IMBALANCE or WMPE (Weighted Mean Percent Error)
# round(pbias(sim= A2DF$Forecast, obs = A2DF$Real), 2)
results <- append(results, pbias(sim= forecast, obs = actual) )

# RSR
# round(rsr(sim= A2DF$Forecast, obs = A2DF$Real), 4)
results <- append(results, rsr(sim= forecast, obs = actual) )

# ---

# replace +Inf/-Inf with NA
results <- replace(results, abs(results)==Inf, NA)

save(list = ls(all=TRUE), file="#{stateFile.fileName}")
';

VAR inputs = ["actual" : actual, "forecast" : forecast];
VAR outputs = {"results", "stateFile"};
VAR res = RENGINE( ["sourceCode" : sourceCode, "inputs" : inputs, "outputs" : outputs] );
VAR outputVals = res["outputs"];
VAR stateFile = RENAMEFILE(outputVals["stateFile"], "workspace.rData");
VAR arrayOtherKpis = outputVals["results"];

# mio calcolo in FQL
PUT(mappaKpis, "MEAN", ROUND(media, 4)*1<$uom> );
PUT(mappaKpis, "SD", ROUND(sd, 4)*1<$uom> );
PUT(mappaKpis, "SST", ROUND(sst, 4)*1<$uom2> );
# forecasterLib
PUT(mappaKpis, "SSE", ROUND(arrayKpis[0], 4)*1<$uom2> );
# mio calcolo in FQL
PUT(mappaKpis, "MSE", ROUND(mse, 4)*1<$uom2> );
PUT(mappaKpis, "RMSE", ROUND(rmse, 4)*1<$uom> );
PUT(mappaKpis, "UMSE", ROUND(umse, 4)*1<$uom2> );
PUT(mappaKpis, "URMSE", ROUND(urmse, 4)*1<$uom> );
# forecasterLib
PUT(mappaKpis, "MAXPE", ROUND(arrayKpis[1]*100, 2) );
# mio calcolo in R

# PUT(mappaKpis, "MINPE", ROUND(arrayOtherKpis[0]*100, 2) );
# forecasterLib
PUT(mappaKpis, "A-MPE", ROUND(arrayKpis[2]*100, 2) );
PUT(mappaKpis, "F-MPE", ROUND(arrayKpis[3]*100, 2) );
PUT(mappaKpis, "S-MPE", ROUND(arrayKpis[4]*100, 2) );
PUT(mappaKpis, "W-MPE", ROUND(arrayKpis[5]*100, 2) );
PUT(mappaKpis, "A-MAPE", ROUND(arrayKpis[6]*100, 2) );
PUT(mappaKpis, "F-MAPE", ROUND(arrayKpis[7]*100, 2) );
PUT(mappaKpis, "S-MAPE", ROUND(arrayKpis[8]*100, 2) );
PUT(mappaKpis, "A-WAPE", ROUND(arrayKpis[9]*100, 2) );
# mio calcolo in FQL
PUT(mappaKpis, "A-PBIAS", ROUND(apbias*100, 2) );
# forecasterLib
PUT(mappaKpis, "F-WAPE", ROUND(arrayKpis[10]*100, 2) );
PUT(mappaKpis, "S-WAPE", ROUND(arrayKpis[11]*100, 2) );
PUT(mappaKpis, "A-WMAPE", ROUND(arrayKpis[12]*100, 2) );
PUT(mappaKpis, "F-WMAPE", ROUND(arrayKpis[13]*100, 2) );
PUT(mappaKpis, "S-WMAPE", ROUND(arrayKpis[14]*100, 2) );
PUT(mappaKpis, "MAXERROR", ROUND(arrayKpis[15], 4)*1<$uom> );
PUT(mappaKpis, "ME", ROUND(arrayKpis[16], 4)*1<$uom> );
PUT(mappaKpis, "MAE", ROUND(arrayKpis[17], 4)*1<$uom> );
PUT(mappaKpis, "WMAE", ROUND(arrayKpis[18], 4)*1<$uom> );
# mio calcolo in FQL
PUT(mappaKpis, "RSQUARE", ROUND(rsquare*100, 2) );
# mio calcolo in R
# PUT(mappaKpis, "NSE", ROUND(arrayOtherKpis[1], 4) );
# PUT(mappaKpis, "IQR-A-APE", ROUND(arrayOtherKpis[2], 2) );
# PUT(mappaKpis, "RSR", ROUND(arrayOtherKpis[4], 4) );
# PUT(mappaKpis, "PBIAS", ROUND(arrayOtherKpis[3], 2) );

return mappaKpis;

#-------------------------------------------------------------------------------------------------------------
# CHIARIMENTO - differenze e similitudini tra WMPE; A-PBIAS; PBIAS
# 
# PBIAS & A-PBIAS sono lo stesso KPI, solo che la formula di R 'pbias' moltiplica il risultato per 100:
# PBIAS = A-PBIAS * 100
# WMPE è un indicatore diverso, ma da questo si può comunque ottenere la (A-)PBIAS:
# settando il peso costante = 1
# invertendo il segno della differenza ([forecast - actual] invece che [actual - forecast])
# 
# NOTA: il calcolo di A-PBIAS in FQL e quello della PBIAS in R, producono risultati diversi
# 		In un caso di test l'esito è stato:
#		26.34 per A-PBIAS in FQL (sbagliato)
#		26.30 per PBIAS in R (corretto)
#-------------------------------------------------------------------------------------------------------------
