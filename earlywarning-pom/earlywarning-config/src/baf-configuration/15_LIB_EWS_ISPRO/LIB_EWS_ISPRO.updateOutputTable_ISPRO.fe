VAR formulaName = "[LIB_EWS_ISPRO.updateOutputTable_ISPRO] ";
DEBUGMESSAGE(formulaName, "START");

VAR analysisUnitID = Param1;

VAR analysisUnitInstance = Analysis_Unit[ID=$analysisUnitID];
VAR wp_list = analysisUnitInstance.Workspace_AnalysisUnit.Workspace.Workspace_Plan[Status="Production"];

IF( SIZE(wp_list) == 0){
	DEBUGMESSAGE(formulaName, " No production objects");
	return null;
}


VAR T_OUT_TMP 		= analysisUnitInstance.ResultTableName+"_TMP";
VAR T_OUT_BCK 		= analysisUnitInstance.ResultTableName+"_BCK";
VAR T_OUT 			= analysisUnitInstance.ResultTableName;
VAR DBCONNECTION 	= Properties_Predictive[ID="PREDICTIVE_PROPERTIES"].PredictiveDatasourceName;
VAR SQL;
VAR CREATED = FALSE;
VAR model;
var modelTable;
var keyColumn = Utils.SingleSetToElement(analysisUnitInstance.AnalysisUnit_Variable.Variable[IsKeyColumn=true].ColumnName);
foreach(wp_list as wp){
		
		model = Utils.SingleSetToElement(wp.WorkspacePlan_Matrix.Matrix.Matrix_Model.Model.ID);
        
		
		LIB_DB.DropTableIfExists("TMP_OUTWP_EN_"+wp.ID,DBCONNECTION);
		LIB_DB.DropTableIfExists("TMP_OUTWP_VM_"+wp.ID,DBCONNECTION);
		LIB_DB.DropTableIfExists("TMP_OUTWP_"+wp.ID,DBCONNECTION);
        
		IF (model <> NULL ){
			model = Predictive_Model[ID=$model];
			modelTable = model.ResultTableName;
			
			
						
			SQLEXECUTE("CREATE TABLE TMP_OUTWP_VM_"+wp.ID+" AS ( 
					
					SELECT "+keyColumn+"
						,"+LIB_EWS.getSqlDecodeColors(Utils.SingleSetToElement(LIB_EWS.getVMNodeColumnByName(model,'Client Mispayment Color')))+" 		AS RESULT_MODULE_01
						,"+LIB_EWS.getSqlDecodeColors(Utils.SingleSetToElement(LIB_EWS.getVMNodeColumnByName(model,'handing Account Color')))+" 		AS RESULT_MODULE_02
						,"+LIB_EWS.getSqlDecodeColors(Utils.SingleSetToElement(LIB_EWS.getVMNodeColumnByName(model,'Balance Sheet Color')))+" 			AS RESULT_MODULE_03
						,"+LIB_EWS.getSqlDecodeColors(Utils.SingleSetToElement(LIB_EWS.getVMNodeColumnByName(model,'Client-handing')))+"			 	AS RESULT_MODULE_04
						,"+LIB_EWS.getSqlDecodeColors(Utils.SingleSetToElement(LIB_EWS.getVMNodeColumnByName(model,'Client-handing-Balance')))+" 		AS RESULT_MODULE_05
					
					FROM "+modelTable+"_VM					
					
				) WITH DATA PRIMARY INDEX(SNDG)",DBCONNECTION,NULL,{});
		
			  SQLEXECUTE("CREATE TABLE TMP_OUTWP_EN_"+wp.ID+" AS ( "+  
					LIB_EWS.getQueryOutputForWorkplace(wp) +" 		
				) WITH DATA PRIMARY INDEX(SNDG)",DBCONNECTION,NULL,{});
		
		}
		
		SQL = SQL +" SELECT EN."+keyColumn+"
        					,"+ARRAY_TO_STRING(Utils.getColumnName ("TMP_OUTWP_EN_"+wp.ID,{"SNDG","DETECTION_RATIONALE","RESULT_MODULE_01","RESULT_MODULE_02","RESULT_MODULE_03","RESULT_MODULE_04","RESULT_MODULE_05"}) )+"
						   ,VM.RESULT_MODULE_01
						   ,VM.RESULT_MODULE_02
						   ,VM.RESULT_MODULE_03
						   ,VM.RESULT_MODULE_04
						   ,VM.RESULT_MODULE_05
						   
						   ,CAST(REGEXP_REPLACE(EN.detection_rationale, 
								'(DS\d{1,};)', -- regexp
								'', --replacestring
								1, --startposition
								0, -- occurrence, 0 = all
								'i' -- match -> case insensitive
								) ||
								CASE
									WHEN FAST_TRACK = '1' THEN ''
									WHEN VM.RESULT_MODULE_01 = 'S30' THEN 'DS01;'
									WHEN VM.RESULT_MODULE_01 = 'S20' THEN 'DS02;'
									WHEN VM.RESULT_MODULE_01 = 'S10' THEN 'DS03;'
									ELSE ''
								END
								||
								CASE
									WHEN FAST_TRACK = '1' THEN ''
									WHEN VM.RESULT_MODULE_02 = 'S30' THEN 'DS04;'
									WHEN VM.RESULT_MODULE_02 = 'S20' THEN 'DS05;'
									WHEN VM.RESULT_MODULE_02 = 'S10' THEN 'DS06;'
									ELSE ''
								END
								||
								CASE
									WHEN FAST_TRACK = '1' THEN ''
									WHEN VM.RESULT_MODULE_03 = 'S30' THEN 'DS07;'
									WHEN VM.RESULT_MODULE_03 = 'S20' THEN 'DS08;'
									WHEN VM.RESULT_MODULE_03 = 'S10' THEN 'DS09;'
									ELSE ''
								END
								
								AS VARCHAR(200) )as 	DETECTION_RATIONALE
								
								
						  ,CURRENT_DATE AS CREATION_DATE 
					FROM TMP_OUTWP_VM_"+wp.ID+" VM 
						JOIN  TMP_OUTWP_EN_"+wp.ID+" EN ON EN."+keyColumn+" = VM."+keyColumn+" 
					";
		SQL = SQL + " UNION ALL ";
}
SQL = SUBSTRING(SQL, 0, LENGTH(SQL) - 10);

IF(LIB_DB.isTableExisting(T_OUT_TMP,DBCONNECTION)) THEN{
    SQLEXECUTE("DROP TABLE "+ T_OUT_TMP,DBCONNECTION,NULL,{});
}
    
SQL = "CREATE TABLE "+T_OUT_TMP+" AS ( "+ SQL+" ) WITH DATA PRIMARY INDEX(SNDG)";
SQLEXECUTE(SQL,DBCONNECTION,NULL,{});

    
CREATED = LIB_DB.isTableExistingAndHavingData(T_OUT_TMP, DBCONNECTION);

IF(CREATED) THEN {
    IF(LIB_DB.isTableExisting(T_OUT_BCK,DBCONNECTION)) THEN    {
        SQLEXECUTE("DROP TABLE "+T_OUT_BCK,DBCONNECTION,NULL,{});
    }
    IF(LIB_DB.isTableExisting(T_OUT,DBCONNECTION)) THEN    {
        LIB_DB.renameTable(T_OUT,T_OUT_BCK,DBCONNECTION,NULL);
    }
       
    LIB_DB.renameTable(T_OUT_TMP,T_OUT,DBCONNECTION,NULL);
 			
	return NOW();
    
}
return null;

DEBUGMESSAGE(formulaName, "END");