# FENull returnNull LIB_EWS_SME_RETAIL.updateAnalyticaltable;
# RETURN VALUE: FENull      -
# EFFETCS:      -           updateAnalyticaltable
# Param1:       FEInstance      analysisUnit instance id

DEBUGMESSAGE("LIB_EWS_SME_RETAIL.updateAnalyticaltable.fe"," START"); # stacktrace

VAR analysisUnitID = Param1;
VAR analysisUnitInstance = Analysis_Unit[ID=$analysisUnitID];
VAR CAU_TABLE_NAME = analysisUnitInstance.AnalyticalTable;
VAR CAU_TMP_TABLE_NAME = CAU_TABLE_NAME+"_TMP";
VAR CAU_BCK_TABLE_NAME = CAU_TABLE_NAME+"_BCK";

VAR RESULT;
VAR CREATED;
VAR DBCONNECTION = Properties_Predictive[ID="PREDICTIVE_PROPERTIES"].PredictiveDatasourceName;
VAR customerUnit = analysisUnitInstance.CustomerUnit_AnalysisUnit.Customer_Unit;
CREATED = false;

IF(LIB_DB.isTableExisting(CAU_TMP_TABLE_NAME,DBCONNECTION)) THEN
{
	SQLEXECUTE("DROP TABLE "+CAU_TMP_TABLE_NAME,DBCONNECTION,NULL,{});
}

IF(LIB_DB.isTableExisting(CAU_TMP_TABLE_NAME + "_PT1",DBCONNECTION)) THEN
{
	SQLEXECUTE("DROP TABLE "+CAU_TMP_TABLE_NAME + "_PT1",DBCONNECTION,NULL,{});
}

IF(LIB_DB.isTableExisting(CAU_TMP_TABLE_NAME + "_PT2",DBCONNECTION)) THEN
{
	SQLEXECUTE("DROP TABLE "+CAU_TMP_TABLE_NAME + "_PT2",DBCONNECTION,NULL,{});
}

IF(LIB_DB.isTableExisting(CAU_TMP_TABLE_NAME + "_PT3",DBCONNECTION)) THEN
{
	SQLEXECUTE("DROP TABLE "+CAU_TMP_TABLE_NAME + "_PT3",DBCONNECTION,NULL,{});
}

IF(LIB_DB.isTableExisting(CAU_TMP_TABLE_NAME + "_PT4",DBCONNECTION)) THEN
{
	SQLEXECUTE("DROP TABLE "+CAU_TMP_TABLE_NAME + "_PT4",DBCONNECTION,NULL,{});
}
VAR QUERY;
QUERY ="CREATE MULTISET TABLE "+CAU_TMP_TABLE_NAME +"_PT1 as ( 
				"+LIB_EWS_SME_RETAIL.UNION_INDICATORS_PT1(customerUnit) +" 
			) WITH DATA PRIMARY INDEX(SNDG)";

SQLEXECUTE("diagnostic noviewfold on for session; "+QUERY,DBCONNECTION,NULL,{});

QUERY ="CREATE MULTISET TABLE "+CAU_TMP_TABLE_NAME +"_PT2 as ( 
				"+LIB_EWS_SME_RETAIL.UNION_INDICATORS_PT2(customerUnit) +" 
			) WITH DATA PRIMARY INDEX(SNDG_PT2)";

SQLEXECUTE("diagnostic noviewfold on for session; "+QUERY,DBCONNECTION,NULL,{});

QUERY ="
CREATE MULTISET TABLE "+CAU_TMP_TABLE_NAME +"_PT3 as ( 
				"+LIB_EWS_SME_RETAIL.UNION_INDICATORS_PT3(customerUnit) +" 
			) WITH DATA PRIMARY INDEX(SNDG_PT3)";

SQLEXECUTE("diagnostic noviewfold on for session; "+QUERY,DBCONNECTION,NULL,{});

QUERY ="
CREATE MULTISET TABLE "+CAU_TMP_TABLE_NAME +"_PT4 as ( 
				"+LIB_EWS_SME_RETAIL.UNION_INDICATORS_PT4(customerUnit) +" 
			) WITH DATA PRIMARY INDEX(SNDG_PT4)";

SQLEXECUTE("diagnostic noviewfold on for session; "+QUERY,DBCONNECTION,NULL,{});

QUERY ="
CREATE MULTISET TABLE "+CAU_TMP_TABLE_NAME +" as ( 
				select * from " + CAU_TMP_TABLE_NAME + "_PT1 PT1 
				JOIN "+ CAU_TMP_TABLE_NAME + "_PT2 PT2 ON PT1.SNDG = PT2.SNDG_PT2 
				JOIN "+ CAU_TMP_TABLE_NAME + "_PT3 PT3 ON PT1.SNDG = PT3.SNDG_PT3
				JOIN "+ CAU_TMP_TABLE_NAME + "_PT4 PT4 ON PT1.SNDG = PT4.SNDG_PT4
			) WITH DATA PRIMARY INDEX(SNDG)";

SQLEXECUTE("diagnostic noviewfold on for session; "+QUERY,DBCONNECTION,NULL,{});

CREATED = LIB_DB.isTableExistingAndHavingData(CAU_TMP_TABLE_NAME, DBCONNECTION);

IF(CREATED) THEN {
	IF(LIB_DB.isTableExisting(CAU_BCK_TABLE_NAME,DBCONNECTION)) THEN    {
    	SQLEXECUTE("DROP TABLE "+CAU_BCK_TABLE_NAME,DBCONNECTION,NULL,{});
    }
  	IF(LIB_DB.isTableExisting(CAU_TABLE_NAME,DBCONNECTION)) THEN    {
  		LIB_DB.renameTable(CAU_TABLE_NAME,CAU_BCK_TABLE_NAME,DBCONNECTION,NULL);
    }
	LIB_DB.renameTable(CAU_TMP_TABLE_NAME,CAU_TABLE_NAME,DBCONNECTION,NULL);
	DEBUGMESSAGE("LIB_EWS_SME_RETAIL.updateAnalyticaltable.fe"," END"); # stacktrace
	return NOW();
}
ELSE
	return null;
