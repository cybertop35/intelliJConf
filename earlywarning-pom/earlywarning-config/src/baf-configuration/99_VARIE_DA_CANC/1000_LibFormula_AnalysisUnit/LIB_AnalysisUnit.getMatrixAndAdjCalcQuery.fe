var formulaName = "[LIB_AnalysisUnit.getMatrixAndAdjCalcQuery] ";
DEBUGMESSAGE(formulaName, "START");

var adjConfiguration = Param1;
var cellsConfiguration = Param2;
var selectedAdjustmentMode = Param3;

if(selectedAdjustmentMode=='linked') {
    DEBUGMESSAGE(formulaName, "END");
    return LIB_AnalysisUnit.getMatrixAndAdjCalcQueryLinked(adjConfiguration, cellsConfiguration);
}
var matrixCalculationQuery = "" + LIB_AnalysisUnit.getMatrixCalculationQuery(cellsConfiguration, null) + "";

var sourceTable = cellsConfiguration['sourceTable'];
var keyColumn = cellsConfiguration['keyColumn'];

debugmessage(formulaName + "selectedAdjustmentMode=", selectedAdjustmentMode);

var queryAllAdjCatScoreCaseList = {};
var querySingleAdjCatScoreCaseList;
var queryAllAdjAdjNameCaseList = {};
var querySingleAdjAdjNameCaseList;
var querySingleAdjAdjNameElseList;

var queryCase = NULL;
var queryCaseAdj = NULL;
var adjInfo;

for(var adjIndex = 0; adjIndex < SIZE(adjConfiguration); adjIndex = adjIndex + 1) {
    adjInfo = adjConfiguration[adjIndex];
    if (adjInfo['query'] <> NULL and IS_EMPTY(TRIM(adjInfo['query']))==FALSE) {
        querySingleAdjAdjNameElseList = {};
        querySingleAdjCatScoreCaseList = {};
        querySingleAdjAdjNameCaseList = {};
        foreach(adjInfo['categoricalScores'] as catScore){
            debugmessage(formulaName + "catScore=", catScore);
            debugmessage(formulaName + "catScore['from']=", catScore['from']);
            addelement(querySingleAdjCatScoreCaseList, [
                'leftOperandNoAdj'  : 'MT.CATEGORICAL_SCORE',
                'rightOperandNoAdj' : "'" + catScore['from'] + "'",
                'adjCondition'      : "(" + adjInfo['query'] + ")",
                'thenClause'        : "'" + catScore['to'] + "'"
            ]);
            addelement(querySingleAdjAdjNameElseList, "'" + catScore['from'] + "'");
            addelement(querySingleAdjAdjNameCaseList, [
                'leftOperandNoAdj'  : 'MT.CATEGORICAL_SCORE',
                'rightOperandNoAdj' : "'" + catScore['from'] + "'",
                'adjCondition'      : "(" + adjInfo['query'] + ")",
                'thenClause'        : "'" + adjInfo['adjID'] + ";" + "'"
            ]);
        }
        addelement(queryAllAdjCatScoreCaseList, querySingleAdjCatScoreCaseList);
        addelement(queryAllAdjAdjNameCaseList, querySingleAdjAdjNameCaseList);
    }
debugmessage(formulaName + "querySingleAdjAdjNameElseList=", querySingleAdjAdjNameElseList);
}

if (is_empty(queryAllAdjCatScoreCaseList)){
    DEBUGMESSAGE(formulaName, "END");
    return matrixCalculationQuery;
}

if(selectedAdjustmentMode=='free') {
    queryCase = "CASE
        ";
    foreach(queryAllAdjCatScoreCaseList as queryCaseI) {
        queryCase = queryCase + LIB_AnalysisUnit.createAdjWhenClauseSet(queryCaseI, null);
    }
    queryCase = queryCase + "ELSE MT.CATEGORICAL_SCORE
    " +
    "END";

    queryCaseAdj = "CASE
        ";
    foreach(queryAllAdjAdjNameCaseList as queryCaseAdjI) {
        queryCaseAdj = queryCaseAdj + LIB_AnalysisUnit.createAdjWhenClauseSet(queryCaseAdjI, null);
    }
    queryCaseAdj = queryCaseAdj + "ELSE MT.ADJID
    " +
    "END";
}


var queryMA = "select "
+ "MT." + keyColumn + ", " + queryCase + " as CATEGORICAL_SCORE, CONTINUOUS_SCORE, MATRIX_SCORE, " + queryCaseAdj + " as ADJID"
+ " from (" + matrixCalculationQuery + ") MT inner join "
+ sourceTable + " T on MT." + keyColumn + " = T." + keyColumn;

DEBUGMESSAGE(formulaName, "END");
return queryMA;