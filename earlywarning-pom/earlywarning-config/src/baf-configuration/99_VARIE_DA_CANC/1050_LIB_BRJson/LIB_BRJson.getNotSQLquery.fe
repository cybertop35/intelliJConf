VAR formulaName = "[LIB_BRJson.getNotSQLquery] ";
DEBUGMESSAGE(formulaName, "START");

# FENull resultValue = LIB_BRJson.getNotSQLquery(FEString brId);
# Param1:       FEString    br id
# RESULT VALUE: FEString    a string with sql query

# VAR brId = ;
# VAR resultValue = LIB_BRJson.getNotSQLquery(brId);

VAR brId = Param1;

VAR expressionSQLQuery;

VAR columnName;
VAR dataType;
VAR variableType;
VAR operator;
VAR operandNumber;
VAR filterSelectNull;
VAR operandIndex;
VAR filterOperandList;
VAR inputValue;
VAR inStr;
VAR valueList;
VAR filterSQL;

FOREACH(Business_Rule[ID=$brId].Filter ORDER BY [StepOrder] AS filterI) {

        columnName = filterI.Filter_Variable.Variable.ColumnName;
        dataType = filterI.Filter_Variable.Variable.Variable_DataType.Data_Type.ID;
        variableType = filterI.Filter_Variable.Variable.VariableType;
        operator = filterI.Filter_Operator.Operator.ID;
        operandNumber = 1;
        IF (operator == "BETWEEN") {
            operandNumber = 2;
        }
		filterSelectNull = SIZE(filterI.Filter_Variable.Filter_Variable_Value[FilterValueIsNull=TRUE]) > 0;
        valueList = {};

        FOR(operandIndex=0; operandIndex<operandNumber; operandIndex=operandIndex+1) {
            filterOperandList = filterI.Filter_Variable.Filter_Variable_Value[OperandIndex=$operandIndex];

            IF (filterI.Filter_Variable.Variable.VariableType == "CONTINUOUS") {
            	inputValue = BusinessRule.getFilterVariableValue(Utils.SingleSetToElement(filterOperandList));
                if (inputValue <> NULL) {
                    ADDELEMENT(valueList, inputValue);
                }
            } ELSE { # "CATEGORICAL", "ORDINAL"
                FOREACH(filterOperandList AS filterOperandI) {
                    inputValue = BusinessRule.getFilterVariableValue(filterOperandI);
                    if (dataType == "BOOLEAN") {
                        if (inputValue) {
                            ADDELEMENT(valueList, 1);
                        }
                        else {
                            ADDELEMENT(valueList, 0);
                        }
                    }
                    else {
                        ADDELEMENT(valueList, inputValue);
                    }
                }
            }
        }

        if (expressionSQLQuery <> NULL) {
            expressionSQLQuery = expressionSQLQuery + " OR ";
        }

        filterSQL = NULL;
        if (operator == "EQUALS" OR operator == "NOT_EQUALS") {
            foreach (valueList as val) {
                if (dataType == "STRING") {
                    val = "'" + val + "'";
                }
                if (inStr <> null) {
                    inStr = inStr + ",";
                }
                inStr = inStr + val;
            }
            if (inStr <> null) {
                if (operator == "EQUALS") {
                    filterSQL = filterSQL + columnName + " NOT IN (" + inStr + ")";
                }
                else {
                    filterSQL = filterSQL + columnName + " IN (" + inStr + ")";
                }
            } else {
                if (operator == "EQUALS") {
                    filterSQL = "(1=1)";
                }
                else {
                    filterSQL = "(1<>1)";
                }
            }
        }
        else {
            if (SIZE(valueList) > 0) {
                if (valueList[0] <> NULL) {
                    if (operator == "GREATER") {
                        filterSQL = filterSQL + columnName + " <= " + valueList[0];
                    }
                    else if (operator == "GREATER_EQUALS") {
                        filterSQL = filterSQL + columnName + " < " + valueList[0];
                    }
                    else if (operator == "LESS") {
                        filterSQL = filterSQL + columnName + " >= " + valueList[0];
                    }
                    else if (operator == "LESS_EQUALS") {
                        filterSQL = filterSQL + columnName + " > " + valueList[0];
                    }
                    else if (operator == "BETWEEN") {
                        filterSQL = filterSQL + " NOT (" + columnName + " BETWEEN " + valueList[0] + " AND " + valueList[1] + ")";
                    }
                }
            }
        }

        IF (NOT filterSelectNull) {
            if (filterSQL == NULL) {
                filterSQL = columnName + " is null";
            }
            else {
                filterSQL = filterSQL + " OR " + columnName + " is null";
            }
        } ELSE {
            if (filterSQL == NULL) {
                filterSQL = filterSQL + " is not null";
            }
            else {
                filterSQL = filterSQL + " AND " + columnName + " is not null";
            }
        }

        expressionSQLQuery = expressionSQLQuery + " ( " + filterSQL + " ) ";

}

DEBUGMESSAGE(formulaName + " - expressionSQLQuery : ", expressionSQLQuery);

DEBUGMESSAGE(formulaName, "END");
RETURN expressionSQLQuery;