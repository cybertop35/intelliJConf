VAR formulaName = "[LIB_BRJson.getSQLquery] ";
DEBUGMESSAGE(formulaName, "START");

# FENull resultValue = LIB_BRJson.getSQLquery(FEString query);
# Param1:       FEString    symbol table map
# RESULT VALUE: FEString    a string with sql query

# VAR query = ;
# VAR resultValue = LIB_BRJson.getSQLquery(query);

VAR query = Param1;

VAR splitQuery;
VAR finalQuery;
VAR substr;
VAR ids = {};
VAR expressionSQLQuery;

# splitting the query in substring and removing the first element obtained
splitQuery = SPLIT(query, '<');
REMOVEELEMENT(splitQuery, 0);

# retrieving business rule id from the substring
FOREACH (splitQuery as br){
    substr = substring(br, 0, 8);
    ADDELEMENT(ids, substr);
}
DEBUGMESSAGE('ids : ', ids);

finalQuery = query;
foreach(ids as id){
    IF(CONTAINS(finalQuery,"<"+ id +"=false>") == true) {
        finalQuery =  REPLACESTRING(finalQuery, "<"+ id +"=false>", ' ( ' + LIB_BRJson.getNotSQLquery(id) + ' ) ');
    } ELSE IF (CONTAINS(finalQuery,"<"+ id +"=true>") == true) {
        finalQuery = REPLACESTRING(finalQuery, "<"+ id +"=true>", ' ( ' + Business_Rule[ID=$id].SqlQuery + ' ) ');
    } ELSE IF (CONTAINS(finalQuery,"<NONE=true>") == true) {
        finalQuery = REPLACESTRING(finalQuery, "<NONE=true>", '( 1!=1 )');
    } ELSE IF (CONTAINS(finalQuery,"<NONE=false>") == true) {
        finalQuery = REPLACESTRING(finalQuery, "<NONE=false>", 'NOT ( 1!=1 )');
    }
}

expressionSQLQuery = finalQuery;

DEBUGMESSAGE(formulaName, "END");
RETURN expressionSQLQuery;