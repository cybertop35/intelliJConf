VAR formulaName = "[LIB_DB.castValue] ";
# DEBUGMESSAGE(formulaName, "START");

# FEString resultValue = LIB_DB.castValue(FEString dataTypeInformation, FEString dataSourceName);
# Param1:       FEMap       the information about data type you want to use
# RESULT VALUE: FEString    the query part with the cast if it's necessary (it depends from the DBMS)
# EFFECTS       -           none
# It's to use when you create data (like "FROM DUAL") in order to be sure the query assign the right data type to the column.
# Oracle and Teradata don't need any modification. Postgresql instead needs modification.

# VAR dataTypeInformation = [ 'dataType' : 'INTEGER' ];
# VAR dataSourceName = "ORACLE";
# VAR resultValue = LIB_DB.castValue(dataTypeInformation, dataSourceName);

VAR dataTypeInformation = Param1;
VAR dataSourceName = Param2;

VAR dataSourceType = LIB_DB.getJDBCConnectionType(dataSourceName);

VAR inputParameter;

VAR valueToUse = PARSESTRING(dataTypeInformation['valueToCast']);
IF((CONTAINS(UPCASE(dataTypeInformation['dataType']), "STRING")
    OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "VARCHAR"))
    AND valueToUse<>"NULL"
) THEN {
    valueToUse = "'" + valueToUse + "'";
}

VAR resultValue = "";
IF(dataSourceType=="ORACLE") THEN {
    resultValue = valueToUse;
}
IF(dataSourceType=="POSTGRESQL" OR dataSourceType=="TERADATA" ) THEN {
    resultValue = "CAST(" + valueToUse + " AS ";
    IF(CONTAINS(UPCASE(dataTypeInformation['dataType']), "STRING")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "VARCHAR")
    ) THEN {
        inputParameter = [
            'datasourceType'    : dataSourceType,
            'fieldSize'         : dataTypeInformation['fieldSize']
        ];
        resultValue = resultValue + LIB_DB.getDBRelatedStringType(inputParameter);
    }
    IF(CONTAINS(UPCASE(dataTypeInformation['dataType']), "INTEGER")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "NUMERIC")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "NUMBER")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "REAL")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "FLOAT")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "DOUBLE")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "SCALAR")
        OR CONTAINS(UPCASE(dataTypeInformation['dataType']), "DECIMAL")
    ) THEN {
        inputParameter = [
            'datasourceType'    : dataSourceType,
            'precision'         : dataTypeInformation['precision'],
            'scale'             : dataTypeInformation['scale']
        ];
        resultValue = resultValue + LIB_DB.getDBRelatedNumberType(inputParameter);
    }

    resultValue = resultValue + ")";
}

IF(dataSourceType=="IMPALA") THEN {
    resultValue = "CAST(" + valueToUse + " AS ";
    IF(CONTAINS(UPCASE(dataTypeInformation['dataType']), "DECIMAL")) THEN {
        inputParameter = [
            'datasourceType'    : dataSourceType,
            'precision'         : dataTypeInformation['precision'],
            'scale'             : dataTypeInformation['scale']
        ];
        resultValue = resultValue + LIB_DB.getDBRelatedNumberType(inputParameter);
    }
    resultValue = resultValue + " ) ";
}

# DEBUGMESSAGE(formulaName, "END");
RETURN resultValue;
