var formulaName = "[PagePresenters.CreateVariableSQL] ";
DEBUGMESSAGE(formulaName, "START");

var user = Param1;
var context = Param2;

var whoAmI = 'CreateVariableSQL';

var nodeValue = context["node"]["value"];
var visualModelingContext = context['visualModelingContext'];

var workspaceId = visualModelingContext['workspaceId'];
var analysisUnitId = visualModelingContext['analysisUnitId'];
var modelId = visualModelingContext['modelId'];
var sessionId = visualModelingContext['sessionId'];

var inputs = vm_eval_inputs(context["topology"], context["node"], visualModelingContext);
var prevVariables = inputs[0]['variables'];

var allPageLabels = LIB_Label.predictiveApp('VisualModeling');

var saved = false;
var run = false;

if (nodeValue == null) {
    nodeValue = [];
}

if (nodeValue['code'] == null) {
    nodeValue['code'] = allPageLabels["R_COMMENT"];
}

if (nodeValue['variableLabelName'] == null) {
    nodeValue['variableLabelName'] = "";
}

if (nodeValue['variableColumnName'] == null) {
    nodeValue['variableColumnName'] = "";
}

if (nodeValue['variableDataType'] == null) {
    nodeValue['variableDataType'] = "STRING";
}

if (nodeValue['variableType'] == null) {
    nodeValue['variableType'] = "CATEGORICAL";
}


var widgets = {};

var outputValue = {};

var itemsDataType = {[
    'label'     : 'String',
    'value'     : 'STRING'
], [
    'label'     : 'Real',
    'value'     : 'REAL'
], [
    'label'     : 'Integer',
    'value'     : 'INTEGER'
]};
LIB_WidgetHelper.dropdown_setSelected(itemsDataType, {nodeValue['variableDataType']}, true);

var itemsType = {[
    'label'     : 'Categorical',
    'value'     : 'CATEGORICAL'
], [
    'label'     : 'Continuous',
    'value'     : 'CONTINUOUS'
], [
    'label'     : 'Ordinal',
    'value'     : 'ORDINAL'
]};
LIB_WidgetHelper.dropdown_setSelected(itemsType, {nodeValue['variableType']}, true);

var rSyntaxTitle = [
    "widgetId" : "rSyntaxTitle",
    "name" : "output",
    "value" : [ "label" : allPageLabels["R_SYNTAX_EDITOR"] ],
    "position" : "#rSyntaxTitle"
];
#addelement(widgets, rSyntaxTitle);

var runActionButton = [
    "widgetId" : "runActionButton",
    "name" : "actionLink",
    "value" : [
        'label' : allPageLabels["RUN"],
        'eventType': 'refresh',
        'textStyle': 'ux-body1-bold text-right',
        'textColor': 'blue'
    ],
    "position" : "#runButton"
];
#addelement(widgets, runActionButton);

var codeEditor = [
    "widgetId" : "CreateVariableSQLCodeEditor",
    "name" : "codeEditor",
    "value" : [
        "theme" : "ace/theme/clouds",
        "mode" : "ace/mode/r",
        "noChangeDelay" : 5000,
        "text" : nodeValue['code']
    ],
    "position" : "#CreateVariableCodeEditor"
];
addelement(widgets, codeEditor);

var newVariableTitle = [
    "widgetId" : "newVariableTitle",
    "name" : "output",
    "value" : [ "label" : allPageLabels["NEW_VARIABLE"] ],
    "position" : "#newVariableTitle"
];
addelement(widgets, newVariableTitle);

var newVariableInput = [
    "widgetId" : "newVariableInput",
    "name" : "input",
    "value" : [ "value" : nodeValue['variableLabelName'], 'eventType':'refresh' ],
    "position" : "#newVariableInput"
];
addelement(widgets, newVariableInput);

var variableTypeLabel = [
    "widgetId" : "newType",
    "name" : "output",
    "value" : [ "label" : allPageLabels["VARIABLE_TYPE"] ],
    "position" : "#newVariableType"
];
addelement(widgets, variableTypeLabel);

var variableDataTypeLabel = [
    "widgetId" : "newDataType",
    "name" : "output",
    "value" : [ "label" : allPageLabels["VARIABLE_DATA_TYPE"] ],
    "position" : "#newVariableDataType"
];
addelement(widgets, variableDataTypeLabel);

var dropdownDataType =
[
    'widgetId':'dropdownDataType',
    'name':'dropdown',
    'value': [
		'multipleSelection' : false,
		'allowNullSelection' : false,
		'skin' : [ 'color' : 'white', 'size' : 'standard' ],
		'items' : itemsDataType
	],
    'position':'#dropdownDataTypePH'
];
addelement(widgets, dropdownDataType);

var dropdownType =
[
    'widgetId':'dropdownType',
    'name':'dropdown',
    'value': [
		'multipleSelection' : false,
		'allowNullSelection' : false,
		'skin' : [ 'color' : 'white', 'size' : 'standard' ],
		'items' : itemsType
	],
    'position':'#dropdownTypePH'
];
addelement(widgets, dropdownType);

var variablesTitle = [
    "widgetId" : "availableVariablesTitle",
    "name" : "output",
    "value" : [ "label" : allPageLabels["AVAILABLE_VARIABLES"] ],
"position" : "#availableVariablesTitle"
];
addelement(widgets, variablesTitle);

var variablesTableValues = CreateVariableSQL.getVariablesTableValues(prevVariables);
var variablesTable = [
    "widgetId"  : "variablesTable",
    "name"      : "dataTable",
    "value"     : [
        'columns'   : {[
            'headerStyle'       : "ux-body2-bold ux-text-oneline",
            "widgetName"        : "output" ,
            "widgetParameters"  : [ "class" : "ux-body1" ],
            'headerLabel'       : allPageLabels["FIELD"]
        ],[
            "widgetName"        : "outputText" ,
            'widgetParameters'  : ['class' : 'glyphicon glyphicon-info-sign ux-text-blue-m1', 'style':'font-size: 16px;top: 3px;'],
            'headerLabel'       : ''
        ],[
            "widgetName"        : "actionLink" ,
            'widgetParameters'  : ['class' : 'glyphicon glyphicon-circle-arrow-right ux-text-green-m1 iconLink'],
            'headerLabel'       : ''
        ]},
        'ids'       : variablesTableValues['tableIds'],
        'values'    : variablesTableValues['tableValues'],
        'highlightOnHover': false,
        'displayHeader': false
    ],
    "position"  : "#variablesTable"
];
addelement(widgets, variablesTable);

VAR searchBox = [
    'widgetId':'searchBox',
    'name':'searchBox',
    'value':[
        'eventType': 'refresh'
    ],
    'position':'#searchPosition'
];
addelement(widgets, searchBox);

return [
    "layout"    : "pages/layouts/CreateVariableSQL/",
    "exported"  : {
       'whoAmI',
       'saved',
       'run',
       'nodeValue',
       'inputs',
       'visualModelingContext',
       'outputValue'
    },
    "pageTitle" : allPageLabels["CREATE"] + " " + allPageLabels["NEW_VARIABLE"],
    "widgets"   : widgets
];