var formulaName = "[PagePresenters.WeightedModelWoe] ";
DEBUGMESSAGE(formulaName, "START");

var user = Param1;
var context = Param2;

var whoAmI = 'WeightedModelWoe';

var all_page_labels 		= LIB_Label.predictiveApp('WeightedModel');
var visualModelingContext 	= context['visualModelingContext'];
var nodeValue 			= context["node"]["value"];
var workspaceId 			= visualModelingContext['workspaceId'];
var analysisUnitId 		= visualModelingContext['analysisUnitId'];
var modelId 				= visualModelingContext['modelId'];
var sessionId 			= visualModelingContext['sessionId'];
var inputs 				= vm_eval_inputs(context["topology"], context["node"], visualModelingContext);
var weightedModelRows		= null;
var saved 				= false;
var widgets				= {};
var weightedModel 		= null;
var constantValue 		= 0;
var functionItems			= {['label' 	: 'Exp'			, 'value' : 'EXP'	,'selected':FALSE],
						   ['label' 	: 'Natuarl log'	, 'value' : 'LN'	,'selected':FALSE],
						   ['label'	: 'Log'			, 'value' : 'LOG'	,'selected':FALSE]
						  };

var variablesInfo = NULL;#LIB_VMCommons.getVariablesInfo(inputs[0]['nodeTableName'], inputs[0]['variables']);
var cols = WeightedModelWoe.getVariablesDatasource(inputs);
						  
if(nodeValue <> null){
	weightedModel = nodeValue["weightedModel"];
}

if(weightedModel <> NULL){
	#debugmessage("old ----- ", weightedModel["weightedModelRows"]);
	weightedModelRows 	= WeightedModelWoe.updateVariables(inputs,weightedModel["weightedModelRows"]);	
	constantValue 		= weightedModel["constantValue"];
	if(weightedModel["function"] <> NULL ) {
		foreach(functionItems as item){
			if(item["label"] == weightedModel["function"]["label"] ){
				item['selected'] = TRUE;
			}
		}
	}
}



# data table column headers
VAR columns = {
        ["headerLabel": "Columns",						'widgetName':"dropdown"],
        ["headerLabel": all_page_labels['WEIGHT'],		'widgetName':"numberInput"],       
		["headerLabel": " ",							'widgetName':"actionLink"]
};

# data table rows

VAR singleRow = {};
VAR idsWM = {};

if(weightedModelRows == null) {
	weightedModelRows = {};
	VAR resultMap = WeightedModelWoe.getNewEmptyRow(weightedModelRows, idsWM, cols);
	weightedModelRows = resultMap['weightedModelRows'];
	idsWM = resultMap['idsWM'];
}

########################################
var outputStaticLabel =
  [ 
    'widgetId':'outputWidget',
    'name':'output',
    'value':[ 
      'label':'Constant value',
      'textStyle' : 'ux-body2-bold text-left',
      'textColor' : 'grey-m1'
    ],
    'position':'#constantValueLabelPH'
  ];
   
ADDELEMENT(widgets, outputStaticLabel);

var numberInputWidget =
  [ 
    'widgetId':'inputWidget',
    'name':'numberInput',
    'value':
      [ 
        'inputValue':constantValue
      ],
      'position':'#constantValuePH'
  ];
ADDELEMENT(widgets, numberInputWidget);

########################################
var outputdropdown =
  [ 
    'widgetId':'outputWidget',
    'name':'output',
    'value':[ 
      'label':'Function',
      'textStyle' : 'ux-body2-bold text-left',
      'textColor' : 'grey-m1'
    ],
    'position':'#dropdownLabelPH'
  ];
   
ADDELEMENT(widgets, outputdropdown);


VAR dropdown =
  [
    'widgetId':'dropdown',
    'name':'dropdown',
    'value':[ 'skin':['color':'transparent','size':'standard'], 
			 'multipleSelection' : false, 
			 'nullSelectionLabel' : 'None',
			 'items' : functionItems			 
			],
    'position':'#dropdownPH'
  ];
 
ADDELEMENT(widgets, dropdown);

########################################


VAR dataTable = [ 'widgetId':'weightedModelTable',
				 'name':'dataTable',
				 'value':
					 [
						 'columns' : columns,
						 'ids' : idsWM,
						 'highlightOnHover' : false,
						 'values' : weightedModelRows
					 ],
				 'position':'#weightedModelTablePosition'
			 ];
			 
ADDELEMENT(widgets, dataTable);


DEBUGMESSAGE(formulaName, "END");

return [
    "layout" : "pages/layouts/weightedModelWoe/",
    "exported" : {'inputs', 'nodeValue', 'saved', 'visualModelingContext', 'variablesInfo', 'whoAmI','cols','weightedModel'},
    "pageTitle" : "Weighted Model Woe",
    "widgets" : widgets
];