VAR formulaName = "[LIB_EWS_BE.updateOutputTable_BE] ";
DEBUGMESSAGE(formulaName, "START");

VAR T_OUT_TMP 		= "OUTPUT_WEB_BE_TMP";
VAR T_OUT_BCK 		= "OUTPUT_WEB_BE_BCK";
VAR T_OUT 			= "OUTPUT_WEB_BE";
VAR DBCONNECTION 	= Properties_Predictive[ID="PREDICTIVE_PROPERTIES"].PredictiveDatasourceName;


VAR SQL = "select * from" ;
VAR CREATED = FALSE;

VAR analysisUnitList = Analysis_Unit;

SQL = SQL+ " ( "+LIB_EWS_BE.UNION_INDICATORS(schema)+") base";

SQL = SQL+ " JOIN (";
foreach(analysisUnitList as unit){
	if(unit.ID <> "CUSTOMER"){
		SQL = SQL + "select * from "+unit.ResultTableName;
		SQL = SQL + " UNION ALL ";
	}
}
SQL = SUBSTRING(SQL, 0, LENGTH(SQL) - 10);
SQL = SQL+ " ) SCORE ON base.SNDG = SCORE.SNDG";

IF(LIB_DB.isTableExisting(T_OUT_TMP,DBCONNECTION)) THEN{
    SQLEXECUTE("DROP TABLE "+ T_OUT_TMP,DBCONNECTION,NULL,{});
}
    
SQL = "CREATE TABLE "+T_OUT_TMP+" AS ( "+ SQL+" ) WITH DATA";
SQLEXECUTE(SQL,DBCONNECTION,NULL,{});

    
CREATED = LIB_DB.isTableExistingAndHavingData(T_OUT_TMP, DBCONNECTION);

IF(CREATED) THEN {
    IF(LIB_DB.isTableExisting(T_OUT_BCK,DBCONNECTION)) THEN    {
        SQLEXECUTE("DROP TABLE "+T_OUT_BCK,DBCONNECTION,NULL,{});
    }
    IF(LIB_DB.isTableExisting(T_OUT,DBCONNECTION)) THEN    {
        LIB_DB.renameTable(T_OUT,T_OUT_BCK,DBCONNECTION);
    }
       
    LIB_DB.renameTable(T_OUT_TMP,T_OUT,DBCONNECTION);
 			
	return NOW();
    
}
return null;

DEBUGMESSAGE(formulaName, "END");

