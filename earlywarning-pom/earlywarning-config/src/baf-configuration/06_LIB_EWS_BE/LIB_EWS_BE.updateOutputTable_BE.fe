VAR formulaName = "[LIB_EWS_BE.updateOutputTable_BE] ";
DEBUGMESSAGE(formulaName, "START");

VAR customerUnit = Param1;

VAR T_OUT 			= customerUnit.Output_tableName;
VAR T_OUT_TMP 		= T_OUT+"_TMP";
VAR T_OUT_BCK 		= T_OUT+"_BCK";

VAR DBCONNECTION 		= Properties_Predictive[ID="PREDICTIVE_PROPERTIES"].PredictiveDatasourceName;
VAR analysisUnitList 	= customerUnit.CustomerUnit_AnalysisUnit.Analysis_Unit;

VAR brName;
VAR INDEX ;
VAR NOME_COLONNA = NULL;
VAR CREATED = FALSE;
VAR columns;
VAR SQL;
VAR brColumns ;
VAR resultAnalysisUnits;
VAR BR_LIST = {};
VAR resultAnalysisUnitsTable= "ANALYSIS_UNITS";
VAR indicatorsTable = "T_TEMP_BE";
VAR CURRENT_DATE = PARSESTRING(NOW(),'dd/MM/YYYY');


VAR  localSchema = SQLEXECUTE("select database",DBCONNECTION,NULL,{});
localSchema = localSchema[0][0];

#CALCOLO LE BR


foreach(analysisUnitList as unit){
	
	if(LIB_DB.isTableExisting(unit.ResultTableName,DBCONNECTION) and LIB_EWS.checkAnalysisUnitStatus(unit) == true) THEN {
		brColumns = LIB_EWS.getBRFieldName(unit);
		columns = ARRAY_TO_STRING( Utils.getColumnName(unit.ResultTableName,CONCAT({"SNDG","COUNTRY"},KEYSET(brColumns))  ) );

		resultAnalysisUnits = resultAnalysisUnits + 
				" select "+unit.ResultTableName+".SNDG
						,"+unit.ResultTableName+".COUNTRY
						,"+columns +"			
				from "+unit.ResultTableName +" "+unit.ResultTableName + "
					 JOIN "+customerUnit.TeradataSchema+ "." +customerUnit.Source_tableName + " "+customerUnit.Source_tableName+ " on " +customerUnit.Source_tableName+".SNDG = "+unit.ResultTableName+".SNDG AND  " +customerUnit.Source_tableName+".COUNTRY = "+unit.ResultTableName+".COUNTRY
					 JOIN "+localSchema+"." +unit.AnalyticalTable + " "+ unit.AnalyticalTable+ " on " +unit.AnalyticalTable+".SNDG = "+unit.ResultTableName+".SNDG AND " +unit.AnalyticalTable+".COUNTRY = "+unit.ResultTableName+".COUNTRY
				WHERE TO_CHAR("+unit.ResultTableName +".creation_date,'dd/MM/YYYY') = '"+CURRENT_DATE+"'
				and "+customerUnit.Source_tableName+".SYSTEM_DATE = "+unit.AnalyticalTable+".SYSTEM_DATE";
        
		resultAnalysisUnits = resultAnalysisUnits + " UNION ALL ";	

	}

}
resultAnalysisUnits = SUBSTRING(resultAnalysisUnits, 0, LENGTH(resultAnalysisUnits) - 10);
columns = columns +","+indicatorsTable+".*" ;

IF(LIB_DB.isTableExisting(indicatorsTable,DBCONNECTION)) THEN{
    SQLEXECUTE("DROP TABLE "+ indicatorsTable,DBCONNECTION,NULL,{});
}
SQLEXECUTE("diagnostic noviewfold on for session; "+"CREATE TABLE " +indicatorsTable+ " as ("+LIB_EWS_BE.UNION_INDICATORS(customerUnit)+") WITH DATA",DBCONNECTION,null,{});

SQL = "SELECT  "+columns+" 
	  FROM "+indicatorsTable+" "+indicatorsTable+"
		JOIN ("+resultAnalysisUnits+")"+resultAnalysisUnitsTable+" ON "+indicatorsTable+".SNDG = "+resultAnalysisUnitsTable+".SNDG and "+indicatorsTable+".COUNTRY = "+resultAnalysisUnitsTable+".COUNTRY";



IF(LIB_DB.isTableExisting(T_OUT_TMP,DBCONNECTION)) THEN{
    SQLEXECUTE("DROP TABLE "+ T_OUT_TMP,DBCONNECTION,NULL,{});
}
    
SQL = "CREATE MULTISET TABLE "+T_OUT_TMP+" AS ( "+ SQL+" ) WITH DATA PRIMARY INDEX(SNDG)";
SQLEXECUTE(SQL,DBCONNECTION,NULL,{});

    
CREATED = LIB_DB.isTableExistingAndHavingData(T_OUT_TMP, DBCONNECTION);

IF(CREATED) THEN {
    IF(LIB_DB.isTableExisting(T_OUT_BCK,DBCONNECTION)) THEN    {
        SQLEXECUTE("DROP TABLE "+T_OUT_BCK,DBCONNECTION,NULL,{});
    }
    IF(LIB_DB.isTableExisting(T_OUT,DBCONNECTION)) THEN    {
        LIB_DB.renameTable(T_OUT,T_OUT_BCK,DBCONNECTION,NULL);
    }
       
    LIB_DB.renameTable(T_OUT_TMP,T_OUT,DBCONNECTION,NULL);
 			
	return NOW();
    
}
return null;

DEBUGMESSAGE(formulaName, "END");

