VAR formulaName = "[LIB_EWS_BE.updateOutputTable_BE] ";
DEBUGMESSAGE(formulaName, "START");

VAR customerUnit = Param1;

VAR T_OUT 			= customerUnit.Output_tableName;
VAR T_OUT_TMP 		= T_OUT+"_TMP";
VAR T_OUT_BCK 		= T_OUT+"_BCK";

VAR DBCONNECTION 	= Properties_Predictive[ID="PREDICTIVE_PROPERTIES"].PredictiveDatasourceName;
VAR columns;
VAR CREATED = FALSE;
VAR SQL;
VAR analysisUnitTable;
VAR UNION;
VAR analysisUnitList = customerUnit.CustomerUnit_AnalysisUnit.Analysis_Unit;



UNION = UNION+ " JOIN (";
foreach(analysisUnitList as unit){
	analysisUnitTable = unit.ResultTableName;
	UNION = UNION + "select * from "+unit.ResultTableName;
	UNION = UNION + " UNION ALL ";

}
UNION = SUBSTRING(UNION, 0, LENGTH(UNION) - 10);
UNION = UNION+ " ) SCORE ON base.SNDG = SCORE.SNDG";

columns = "BASE.*,"+ ARRAY_TO_STRING( Utils.getColumnName(analysisUnitTable,"SNDG")   );
SQL = "SELECT  "+columns+" FROM "+customerUnit.TableName+" base";

SQL = SQL + UNION;

IF(LIB_DB.isTableExisting(T_OUT_TMP,DBCONNECTION)) THEN{
    SQLEXECUTE("DROP TABLE "+ T_OUT_TMP,DBCONNECTION,NULL,{});
}
    
SQL = "CREATE TABLE "+T_OUT_TMP+" AS ( "+ SQL+" ) WITH DATA";
SQLEXECUTE(SQL,DBCONNECTION,NULL,{});

    
CREATED = LIB_DB.isTableExistingAndHavingData(T_OUT_TMP, DBCONNECTION);

IF(CREATED) THEN {
    IF(LIB_DB.isTableExisting(T_OUT_BCK,DBCONNECTION)) THEN    {
        SQLEXECUTE("DROP TABLE "+T_OUT_BCK,DBCONNECTION,NULL,{});
    }
    IF(LIB_DB.isTableExisting(T_OUT,DBCONNECTION)) THEN    {
        LIB_DB.renameTable(T_OUT,T_OUT_BCK,DBCONNECTION);
    }
       
    LIB_DB.renameTable(T_OUT_TMP,T_OUT,DBCONNECTION);
 			
	return NOW();
    
}
return null;

DEBUGMESSAGE(formulaName, "END");

