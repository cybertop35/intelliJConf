<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- Just for testing... -->
	<http pattern="/app/oauth/cache_approvals" security="none" xmlns="http://www.springframework.org/schema/security" />
	<http pattern="/app/oauth/uncache_approvals" security="none" xmlns="http://www.springframework.org/schema/security" />

	<http pattern="/app/oauth/token" 
		create-session="never" 
		authentication-manager-ref="clientAuthenticationManager"
		xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/app/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<anonymous enabled="false" />
		<http-basic />
		<!-- include this only if you need to authenticate clients via request parameters -->
		<custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<http pattern="/app/secure/JSON/**" 
			entry-point-ref="oauthAuthenticationEntryPoint" 
			access-decision-manager-ref="accessDecisionManager"
			xmlns="http://www.springframework.org/schema/security">
			<intercept-url pattern="/app/secure/JSON/**" access="ROLE_USER" />
		<custom-filter ref="resourceServerFilter" before="EXCEPTION_TRANSLATION_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<http access-denied-page="/app/pub/login.htm"  xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/app/oauth/**" access="ROLE_USER" />
		<intercept-url pattern="/app/pub/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/app/secure/**" access="ROLE_USER" />
		<intercept-url pattern="/app/secure/admin/**" access="ROLE_ADMIN" />
		<form-login authentication-failure-url="/app/pub/login.htm?login_error=1" 
					login-page="/app/pub/login.htm"
					authentication-success-handler-ref="roleBasedTargetUrl"
					login-processing-url="/app/pub/login/login_security_check.do"  />
		<logout logout-success-url="/app/pub/home.htm" 
        		invalidate-session="true"  
        		logout-url="/app/secure/logout"/>
		<anonymous  />
		
	</http>

	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAuthenticationEntryPoint">
		<property name="realmName" value="FantaGameBE" />
	</bean>

	<bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAccessDeniedHandler" />

	<bean id="clientCredentialsTokenEndpointFilter" class="com.fantagame.be.business.controller.oauth.OauthEndPoint">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased" xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider user-service-ref="clientDetailsUserService" />
	</authentication-manager>

    <authentication-manager xmlns="http://www.springframework.org/schema/security">
    	<authentication-provider ref="authenticationProvider"/>
    </authentication-manager>
    
    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="passwordEncoder">
            <bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" >
            	<constructor-arg value="256"/>
            </bean>
        </property>
        <property name="saltSource" ref="saltSource"/>
        <property name="userDetailsService" ref="userDetailsService" />
    </bean>
    <bean id="userDetailsService" 	class="com.fantagame.be.application.security.UserDetailsServiceImp"/>
     <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value="getNick" />
	</bean>

	<bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />

	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.RandomValueTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
	</bean>

<!-- 	<bean id="userApprovalHandler" class="com.fantagame.be.application.security.oauth.FantaGameUserApprovalHandler"> -->
<!-- 		<property name="autoApproveClients"> -->
<!-- 			<set> -->
<!-- 				<value>my-less-trusted-autoapprove-client</value> -->
<!-- 			</set> -->
<!-- 		</property> -->
<!-- 		<property name="tokenServices" ref="tokenServices" /> -->
<!-- 	</bean> -->

	<oauth:authorization-server client-details-service-ref="clientDetails" 
								token-services-ref="tokenServices"
								user-approval-page="oauth/confirm_access" >
								
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password />
	</oauth:authorization-server>

	<oauth:resource-server id="resourceServerFilter" resource-id="fantagame" token-services-ref="tokenServices" />

	<oauth:client-details-service id="clientDetails">
		<oauth:client client-id="my-trusted-client" 							authorized-grant-types="password,authorization_code,refresh_token,implicit"	authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT" scope="read,write,trust" />
		<oauth:client client-id="my-trusted-client-with-secret" 				authorized-grant-types="password,authorization_code,refresh_token,implicit" authorities="ROLE_CLIENT" secret="somesecret" />
		<oauth:client client-id="my-less-trusted-client" 						authorized-grant-types="authorization_code,implicit"	authorities="ROLE_CLIENT" />
		<oauth:client client-id="my-less-trusted-autoapprove-client" 			authorized-grant-types="implicit" 		authorities="ROLE_CLIENT" />
		<oauth:client client-id="my-client-with-registered-redirect" 			authorized-grant-types="authorization_code,client_credentials" 	authorities="ROLE_CLIENT" redirect-uri="http://anywhere" scope="read,trust" />
		<oauth:client client-id="my-untrusted-client-with-registered-redirect" 	authorized-grant-types="authorization_code" authorities="ROLE_CLIENT" redirect-uri="http://anywhere" scope="read" />
		<oauth:client client-id="tonr" resource-ids="sparklr" 					authorized-grant-types="authorization_code" authorities="ROLE_CLIENT" scope="read,write" secret="secret" />
	</oauth:client-details-service>



	<sec:global-method-security pre-post-annotations="enabled" proxy-target-class="false">
		<sec:expression-handler ref="oauthExpressionHandler" />
	</sec:global-method-security>

	<oauth:expression-handler id="oauthExpressionHandler" />

	<bean id="accessConfirmationController" class="com.fantagame.be.business.controller.oauth.AccessConfirmationController">
		<property name="clientDetailsService" ref="clientDetails" />
	</bean>
	
	 <bean id="loadRSAKey" 			class="com.fantagame.be.application.security.LoadRSAPrivateKey">
		<property name="path" value="classpath:privateKey.ky"/>
	</bean>
	
	<bean id="roleBasedTargetUrl" 	class="com.fantagame.be.application.security.RoleBasedTargetUrl" />

		<!--  For use use-expressions="true" tag-->
	<bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />   
   
</beans>
